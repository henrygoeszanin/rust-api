sqlx migrate add -r init
  Cria uma nova migration "init" com estrutura raw, permitindo inserir comandos SQL de inicialização.

sqlx migrate add <nome_da_migration>
  Cria uma nova migration com o nome especificado. As migrations serão numeradas automaticamente.
  
sqlx migrate run
  Executa todas as migrations pendentes na base de dados definida pela variável DATABASE_URL.

sqlx migrate revert
  Reverte a última migration aplicada, útil para desfazer mudanças indesejadas.

sqlx migrate list
  Lista todas as migrations aplicadas e pendentes, permitindo verificar o estado atual do banco.

sqlx db create
  Cria o banco de dados conforme configurado na variável DATABASE_URL.

sqlx db drop
  Remove (drop) o banco de dados configurado em DATABASE_URL. Use com cuidado!

sqlx prepare -- --lib
  Pré-compila as queries SQL para verificar possíveis erros em tempo de compilação. O parâmetro após -- define as opções para o comando Cargo.

sqlx check
  Realiza uma checagem estática das queries no código para garantir a compatibilidade com o banco de dados, similar a uma "preparação".

Observações:
- Certifique-se de que o SQLx CLI está instalado com suporte a Postgres:
    cargo install sqlx-cli --no-default-features --features postgres
- A variável DATABASE_URL deve estar corretamente configurada no ambiente ou em um arquivo .env para que os comandos funcionem.
- Utilize esses comandos no terminal do seu projeto para gerenciar as migrations e operações do banco de dados.